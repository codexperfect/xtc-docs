{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"About Xtended Content is a Drupal module that provides access to external content from Drupal 8. Main modules Xtended Content : API module Xtended Content Elastica Xtended Content File Xtended Content Guzzle Xtended Content Search Architecture Helpers Many Helper functions can be found in the XtendedContent/API directory in xtc module. Plugins 10 plugins managers are defined throughout the XTC modules. Yaml plugins are used when the Default class is mostly used, and plugins are data driven. Annotation plugins are used when plugins are code driven.","title":"About"},{"location":"#about","text":"Xtended Content is a Drupal module that provides access to external content from Drupal 8.","title":"About"},{"location":"#main-modules","text":"Xtended Content : API module Xtended Content Elastica Xtended Content File Xtended Content Guzzle Xtended Content Search","title":"Main modules"},{"location":"#architecture","text":"","title":"Architecture"},{"location":"#helpers","text":"Many Helper functions can be found in the XtendedContent/API directory in xtc module.","title":"Helpers"},{"location":"#plugins","text":"10 plugins managers are defined throughout the XTC modules. Yaml plugins are used when the Default class is mostly used, and plugins are data driven. Annotation plugins are used when plugins are code driven.","title":"Plugins"},{"location":"helpers/config/","text":"Config Helpers (mostly deprecated) Many Helper static functions defined in \\Drupal\\xtc\\XtendedContent\\API\\Config are considered deprecated. Any new code should give priority to other helpers from Drupal\\xtc\\XtendedContent\\API namespace.","title":"Config Helpers"},{"location":"helpers/config/#config-helpers-mostly-deprecated","text":"Many Helper static functions defined in \\Drupal\\xtc\\XtendedContent\\API\\Config are considered deprecated. Any new code should give priority to other helpers from Drupal\\xtc\\XtendedContent\\API namespace.","title":"Config Helpers (mostly deprecated)"},{"location":"helpers/plugins-helpers/","text":"Plugins Helpers Many Plugins Helpers can be found in the Drupal\\xtc\\XtendedContent\\API namespace: Classes extending PluginBase They provide get() and load() functions. XtcDisplay XtcFilter XtcFilterType XtcForm XtcHandler XtcMapping XtcPager XtcProfile XtcRequest XtcServer Extending the Helpers Providing a new Helper class can be done that way: namespace Drupal\\xtc\\XtendedContent\\API; use Drupal\\xtcsearch\\PluginManager\\XtcSearchDisplay\\XtcSearchDisplayDefault; class XtcDisplay extends PluginBase { public static function get($name): XtcSearchDisplayDefault{ return parent::get($name); } protected static function getService() : string { return plugin.manager.xtcsearch_display ; } } Make sure to define the right return type to the get() function. Define the Plugin Manager service in the getService() function. ToolBox The ToolBox Helper class is used to provide Xtended Content suite with plain tool static functions. For now: replaceAccents() transliterate() getPrefix() getSuffix()","title":"Plugins Helpers"},{"location":"helpers/plugins-helpers/#plugins-helpers","text":"Many Plugins Helpers can be found in the Drupal\\xtc\\XtendedContent\\API namespace:","title":"Plugins Helpers"},{"location":"helpers/plugins-helpers/#classes-extending-pluginbase","text":"They provide get() and load() functions. XtcDisplay XtcFilter XtcFilterType XtcForm XtcHandler XtcMapping XtcPager XtcProfile XtcRequest XtcServer","title":"Classes extending PluginBase"},{"location":"helpers/plugins-helpers/#extending-the-helpers","text":"Providing a new Helper class can be done that way: namespace Drupal\\xtc\\XtendedContent\\API; use Drupal\\xtcsearch\\PluginManager\\XtcSearchDisplay\\XtcSearchDisplayDefault; class XtcDisplay extends PluginBase { public static function get($name): XtcSearchDisplayDefault{ return parent::get($name); } protected static function getService() : string { return plugin.manager.xtcsearch_display ; } } Make sure to define the right return type to the get() function. Define the Plugin Manager service in the getService() function.","title":"Extending the Helpers"},{"location":"helpers/plugins-helpers/#toolbox","text":"The ToolBox Helper class is used to provide Xtended Content suite with plain tool static functions. For now: replaceAccents() transliterate() getPrefix() getSuffix()","title":"ToolBox"},{"location":"modules/xtc/","text":"Xtended Content (xtc) On Drupal.org Project page: https://www.drupal.org/project/xtc Issues and Pull Rrequests are managed on Github. On Github Repository: https://github.com/codexperfect/xtc Issues: https://github.com/codexperfect/xtc/issues Pull-Requests: https://github.com/codexperfect/xtc/pulls Documentation Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtc/docs","title":"Xtended Content"},{"location":"modules/xtc/#xtended-content-xtc","text":"","title":"Xtended Content (xtc)"},{"location":"modules/xtc/#on-drupalorg","text":"Project page: https://www.drupal.org/project/xtc Issues and Pull Rrequests are managed on Github.","title":"On Drupal.org"},{"location":"modules/xtc/#on-github","text":"Repository: https://github.com/codexperfect/xtc Issues: https://github.com/codexperfect/xtc/issues Pull-Requests: https://github.com/codexperfect/xtc/pulls","title":"On Github"},{"location":"modules/xtc/#documentation","text":"Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtc/docs","title":"Documentation"},{"location":"modules/xtcelastica/","text":"Xtended Content Elastica (xtcelastica) On Drupal.org Project page: https://www.drupal.org/project/xtcelastica Issues and Pull Rrequests are managed on Github. On Github Repository: https://github.com/codexperfect/xtcelastica Issues: https://github.com/codexperfect/xtcelastica/issues Pull-Requests: https://github.com/codexperfect/xtcelastica/pulls Documentation Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcelastica/docs","title":"Xtended Content Elastica"},{"location":"modules/xtcelastica/#xtended-content-elastica-xtcelastica","text":"","title":"Xtended Content Elastica (xtcelastica)"},{"location":"modules/xtcelastica/#on-drupalorg","text":"Project page: https://www.drupal.org/project/xtcelastica Issues and Pull Rrequests are managed on Github.","title":"On Drupal.org"},{"location":"modules/xtcelastica/#on-github","text":"Repository: https://github.com/codexperfect/xtcelastica Issues: https://github.com/codexperfect/xtcelastica/issues Pull-Requests: https://github.com/codexperfect/xtcelastica/pulls","title":"On Github"},{"location":"modules/xtcelastica/#documentation","text":"Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcelastica/docs","title":"Documentation"},{"location":"modules/xtcfile/","text":"Xtended Content File (xtcfile) On Drupal.org Project page: https://www.drupal.org/project/xtcfile Issues and Pull Rrequests are managed on Github. On Github Repository: https://github.com/codexperfect/xtcfile Issues: https://github.com/codexperfect/xtcfile/issues Pull-Requests: https://github.com/codexperfect/xtcfile/pulls Documentation Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcfile/docs","title":"Xtended Content File"},{"location":"modules/xtcfile/#xtended-content-file-xtcfile","text":"","title":"Xtended Content File (xtcfile)"},{"location":"modules/xtcfile/#on-drupalorg","text":"Project page: https://www.drupal.org/project/xtcfile Issues and Pull Rrequests are managed on Github.","title":"On Drupal.org"},{"location":"modules/xtcfile/#on-github","text":"Repository: https://github.com/codexperfect/xtcfile Issues: https://github.com/codexperfect/xtcfile/issues Pull-Requests: https://github.com/codexperfect/xtcfile/pulls","title":"On Github"},{"location":"modules/xtcfile/#documentation","text":"Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcfile/docs","title":"Documentation"},{"location":"modules/xtcguzzle/","text":"Xtended Content Guzzle (xtcguzzle) On Drupal.org Project page: https://www.drupal.org/project/xtcguzzle Issues and Pull Rrequests are managed on Github. On Github Repository: https://github.com/codexperfect/xtcguzzle Issues: https://github.com/codexperfect/xtcguzzle/issues Pull-Requests: https://github.com/codexperfect/xtcguzzle/pulls Documentation Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcguzzle/docs","title":"Xtended Content Guzzle"},{"location":"modules/xtcguzzle/#xtended-content-guzzle-xtcguzzle","text":"","title":"Xtended Content Guzzle (xtcguzzle)"},{"location":"modules/xtcguzzle/#on-drupalorg","text":"Project page: https://www.drupal.org/project/xtcguzzle Issues and Pull Rrequests are managed on Github.","title":"On Drupal.org"},{"location":"modules/xtcguzzle/#on-github","text":"Repository: https://github.com/codexperfect/xtcguzzle Issues: https://github.com/codexperfect/xtcguzzle/issues Pull-Requests: https://github.com/codexperfect/xtcguzzle/pulls","title":"On Github"},{"location":"modules/xtcguzzle/#documentation","text":"Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcguzzle/docs","title":"Documentation"},{"location":"modules/xtcsearch/","text":"Xtended Content Search (xtcsearch) On Drupal.org Project page: https://www.drupal.org/project/xtcsearch Issues and Pull Rrequests are managed on Github. On Github Repository: https://github.com/codexperfect/xtcsearch Issues: https://github.com/codexperfect/xtcsearch/issues Pull-Requests: https://github.com/codexperfect/xtcsearch/pulls Documentation Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcsearch/docs","title":"Xtended Content Search"},{"location":"modules/xtcsearch/#xtended-content-search-xtcsearch","text":"","title":"Xtended Content Search (xtcsearch)"},{"location":"modules/xtcsearch/#on-drupalorg","text":"Project page: https://www.drupal.org/project/xtcsearch Issues and Pull Rrequests are managed on Github.","title":"On Drupal.org"},{"location":"modules/xtcsearch/#on-github","text":"Repository: https://github.com/codexperfect/xtcsearch Issues: https://github.com/codexperfect/xtcsearch/issues Pull-Requests: https://github.com/codexperfect/xtcsearch/pulls","title":"On Github"},{"location":"modules/xtcsearch/#documentation","text":"Documentation for the whole Xtended Content suite: https://xtc.docs.codexperfect.com/ Documentation is published at: https://xtc.docs.codexperfect.com/ Documentation is managed in the XTC Content module: /help/docs ( MkDocs format) Documentation can be accessed directly inside the Drupal administration area: /admin/documentation/xtcsearch/docs","title":"Documentation"},{"location":"plugins/plugins-by-modules/","text":"Plugins by modules 10 plugins managers are defined throughout the XTC modules: xtc module 4 plugin managers are defined in xtc . xtc_handler xtc_profile xtc_request xtc_server xtcelastica module 1 plugin manager is defined in xtcelastica . xtcelastica_mapping xtcfile module No plugin manager is defined in xtcfile . xtcguzzle module No plugin manager is defined in xtcguzzle . xtcsearch module 5 plugin managers are defined in xtcsearch . xtcsearch xtcsearch_display xtcsearch_filter xtcsearch_filter_type xtcsearch_pager","title":"Plugins by modules"},{"location":"plugins/plugins-by-modules/#plugins-by-modules","text":"10 plugins managers are defined throughout the XTC modules:","title":"Plugins by modules"},{"location":"plugins/plugins-by-modules/#xtc-module","text":"4 plugin managers are defined in xtc . xtc_handler xtc_profile xtc_request xtc_server","title":"xtc module"},{"location":"plugins/plugins-by-modules/#xtcelastica-module","text":"1 plugin manager is defined in xtcelastica . xtcelastica_mapping","title":"xtcelastica module"},{"location":"plugins/plugins-by-modules/#xtcfile-module","text":"No plugin manager is defined in xtcfile .","title":"xtcfile module"},{"location":"plugins/plugins-by-modules/#xtcguzzle-module","text":"No plugin manager is defined in xtcguzzle .","title":"xtcguzzle module"},{"location":"plugins/plugins-by-modules/#xtcsearch-module","text":"5 plugin managers are defined in xtcsearch . xtcsearch xtcsearch_display xtcsearch_filter xtcsearch_filter_type xtcsearch_pager","title":"xtcsearch module"},{"location":"plugins/xtc-plugins/","text":"XTC Plugins 4 plugin managers are defined in xtc . xtc_handler plugin manager Service: plugin.manager.xtc_handler 8 plugins are provided by xtcfile : csv html json markdown mkdocs readme text yaml xtc_profile plugin manager Service: plugin.manager.xtc_profile 4 disabled plugins examples are provided by xtcelastica in xtcelastica.xtc_profiles.yml.dist : account-by-id known-doc index-doc unindex-doc 6 disabled plugins examples are provided by xtcfile in xtcfile.xtc_profiles.yml.dist : test_text test_html test_csv test_yaml test_json test_md As a complement, xtcfile module implements dynamic profiles to provide: In-line Readme files in the Drupal administration area: used for all existing modules. In-line Documentation based on MkDocs standards: used in the xtc module. A API function that can be used to write the module Help page in a help/help.md file: used in every xtc modules. xtc_request plugin manager Service: plugin.manager.xtc_request These requests are consumed by XtcRequest* + Client* : this approach uses directly raw elasticsearch library. It is now deprecated. xtcsearch approach (using object elastica library) should be privileged. xtc_server plugin manager Service: plugin.manager.xtc_server 1 disabled plugin example is provided by xtcelastica in xtcelastica.xtc_servers.yml.dist . This plugin helps to describe a server that can be used by other plugins such as xtcelastica , xtcguzzle or xtcsearch .","title":"XTC plugins"},{"location":"plugins/xtc-plugins/#xtc-plugins","text":"4 plugin managers are defined in xtc .","title":"XTC Plugins"},{"location":"plugins/xtc-plugins/#xtc_handler-plugin-manager","text":"Service: plugin.manager.xtc_handler 8 plugins are provided by xtcfile : csv html json markdown mkdocs readme text yaml","title":"xtc_handler plugin manager"},{"location":"plugins/xtc-plugins/#xtc_profile-plugin-manager","text":"Service: plugin.manager.xtc_profile 4 disabled plugins examples are provided by xtcelastica in xtcelastica.xtc_profiles.yml.dist : account-by-id known-doc index-doc unindex-doc 6 disabled plugins examples are provided by xtcfile in xtcfile.xtc_profiles.yml.dist : test_text test_html test_csv test_yaml test_json test_md As a complement, xtcfile module implements dynamic profiles to provide: In-line Readme files in the Drupal administration area: used for all existing modules. In-line Documentation based on MkDocs standards: used in the xtc module. A API function that can be used to write the module Help page in a help/help.md file: used in every xtc modules.","title":"xtc_profile plugin manager"},{"location":"plugins/xtc-plugins/#xtc_request-plugin-manager","text":"Service: plugin.manager.xtc_request These requests are consumed by XtcRequest* + Client* : this approach uses directly raw elasticsearch library. It is now deprecated. xtcsearch approach (using object elastica library) should be privileged.","title":"xtc_request plugin manager"},{"location":"plugins/xtc-plugins/#xtc_server-plugin-manager","text":"Service: plugin.manager.xtc_server 1 disabled plugin example is provided by xtcelastica in xtcelastica.xtc_servers.yml.dist . This plugin helps to describe a server that can be used by other plugins such as xtcelastica , xtcguzzle or xtcsearch .","title":"xtc_server plugin manager"},{"location":"plugins/xtcelastica-plugins/","text":"XTC Elastica Plugins 1 plugin manager is defined in xtcelastica . xtcelastica_mapping Service: plugin.manager.xtcelastica_mapping","title":"XTC Elastica plugins"},{"location":"plugins/xtcelastica-plugins/#xtc-elastica-plugins","text":"1 plugin manager is defined in xtcelastica .","title":"XTC Elastica Plugins"},{"location":"plugins/xtcelastica-plugins/#xtcelastica_mapping","text":"Service: plugin.manager.xtcelastica_mapping","title":"xtcelastica_mapping"},{"location":"plugins/xtcfile-plugins/","text":"XTC File Plugins No plugin manager is defined in xtcfile .","title":"XTC File plugins"},{"location":"plugins/xtcfile-plugins/#xtc-file-plugins","text":"No plugin manager is defined in xtcfile .","title":"XTC File Plugins"},{"location":"plugins/xtcguzzle-plugins/","text":"XTC Guzzle Plugins No plugin manager is defined in xtcguzzle .","title":"XTC Guzzle plugins"},{"location":"plugins/xtcguzzle-plugins/#xtc-guzzle-plugins","text":"No plugin manager is defined in xtcguzzle .","title":"XTC Guzzle Plugins"},{"location":"plugins/xtcsearch-plugins/","text":"XTC Search Plugins 5 plugin managers are defined in xtcsearch . xtcsearch Service: plugin.manager.xtcsearch 1 disabled plugin example is provided by xtcelastica in xtcelastica.xtc_searchs.yml.dist : xtc_search xtcsearch_display Service: plugin.manager.xtcsearch_display 3 plugins are provided by xtcsearch in xtcsearch.xtcsearch_displays.yml : autocomplete xtc_block: an XtcSearchBlockBase plugin is provided to help build XTC Search blocks. xtc_page xtcsearch_filter Service: plugin.manager.xtcsearch_filter xtcsearch_filter_type Service: plugin.manager.xtcsearch_filter_type 12 plugins are provided by xtcsearch : select checkbox fullltext autocomplete exclude checkbox_and iterativeCheckbox comingEvents range dateSelect dateRange thisMonth xtcsearch_pager Service: plugin.manager.xtcsearch_pager 3 plugins are provided by xtcsearch : page more: using Masonry style nopager","title":"XTC Search plugins"},{"location":"plugins/xtcsearch-plugins/#xtc-search-plugins","text":"5 plugin managers are defined in xtcsearch .","title":"XTC Search Plugins"},{"location":"plugins/xtcsearch-plugins/#xtcsearch","text":"Service: plugin.manager.xtcsearch 1 disabled plugin example is provided by xtcelastica in xtcelastica.xtc_searchs.yml.dist : xtc_search","title":"xtcsearch"},{"location":"plugins/xtcsearch-plugins/#xtcsearch_display","text":"Service: plugin.manager.xtcsearch_display 3 plugins are provided by xtcsearch in xtcsearch.xtcsearch_displays.yml : autocomplete xtc_block: an XtcSearchBlockBase plugin is provided to help build XTC Search blocks. xtc_page","title":"xtcsearch_display"},{"location":"plugins/xtcsearch-plugins/#xtcsearch_filter","text":"Service: plugin.manager.xtcsearch_filter","title":"xtcsearch_filter"},{"location":"plugins/xtcsearch-plugins/#xtcsearch_filter_type","text":"Service: plugin.manager.xtcsearch_filter_type 12 plugins are provided by xtcsearch : select checkbox fullltext autocomplete exclude checkbox_and iterativeCheckbox comingEvents range dateSelect dateRange thisMonth","title":"xtcsearch_filter_type"},{"location":"plugins/xtcsearch-plugins/#xtcsearch_pager","text":"Service: plugin.manager.xtcsearch_pager 3 plugins are provided by xtcsearch : page more: using Masonry style nopager","title":"xtcsearch_pager"},{"location":"tutorials/elastica-profile/","text":"Elastica profile Loading an Elastica profile To load an Elasticsearch client as a service, simply provide the profile name, the helper static function Config::getXtcRequestFromProfile() from \\Drupal\\xtc\\XtendedContent\\API\\Config . public static function getXtcRequestFromProfile($name){ $profile = \\Drupal::service( plugin.manager.xtc_profile ) - getDefinition($name) ; $xtcrequest = (New $profile[ service ]($name)); if($xtcrequest instanceof AbstractXtcRequest){ $xtcrequest- setConfigfromPlugins(); } return $xtcrequest; } To load a content, here an example of code: $results = $this- getESHits(Config::getXtcRequestFromProfile($name), $uri); Where: protected function getESHits(XtcRequestInterface $service, $uri = ){ $method = $service- getWebservice()[ method ]; $service- get($method, $uri); if(!empty($results = $service- getData( array )) ){ return $results; } return []; } Plugin definition This is a Drupal 8 YAML plugin. Yaml file The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_profiles.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcProfile/XtcProfilePluginManager.php . Structure An Elastica profile definition looks like this: article : label : Article description : type : elastica server : xtc_elastica request : contenu-by-id service : Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\GetElasticaXtcRequest Default values can be provided thanks to args : article : label : Article description : type : elastica server : xtc_elastica request : contenu-by-id service : Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\GetElasticaXtcRequest args : category : News label (string) and description (string) are mandatory for any Drupal 8 plugin definition. Handler type type (string) Always use elastica . Server server (string) Provide the name of the XTC server plugin to use. Request request (string) Provide the name of the XTC request plugin to use. Service service (string) Provide the name of the XtcRequest class to build the Elasticsearch Client. Arguments args (array) Array of default values that can be pass to the request plugin. Extending available XtcRequest services list Any new XtcRequest service should be based on \\Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\AbstractElasticaXtcRequest . Example from the GetElasticaXtcRequest type: namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest; use Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\GetElasticaClient; class GetElasticaXtcRequest extends AbstractElasticaXtcRequest { /** * @return \\Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\AbstractElasticaClient */ protected function getElasticaClient(){ return New GetElasticaClient($this- profile); } }","title":"Profile \u203a Elastica"},{"location":"tutorials/elastica-profile/#elastica-profile","text":"","title":"Elastica profile"},{"location":"tutorials/elastica-profile/#loading-an-elastica-profile","text":"To load an Elasticsearch client as a service, simply provide the profile name, the helper static function Config::getXtcRequestFromProfile() from \\Drupal\\xtc\\XtendedContent\\API\\Config . public static function getXtcRequestFromProfile($name){ $profile = \\Drupal::service( plugin.manager.xtc_profile ) - getDefinition($name) ; $xtcrequest = (New $profile[ service ]($name)); if($xtcrequest instanceof AbstractXtcRequest){ $xtcrequest- setConfigfromPlugins(); } return $xtcrequest; } To load a content, here an example of code: $results = $this- getESHits(Config::getXtcRequestFromProfile($name), $uri); Where: protected function getESHits(XtcRequestInterface $service, $uri = ){ $method = $service- getWebservice()[ method ]; $service- get($method, $uri); if(!empty($results = $service- getData( array )) ){ return $results; } return []; }","title":"Loading an Elastica profile"},{"location":"tutorials/elastica-profile/#plugin-definition","text":"This is a Drupal 8 YAML plugin.","title":"Plugin definition"},{"location":"tutorials/elastica-profile/#yaml-file","text":"The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_profiles.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcProfile/XtcProfilePluginManager.php .","title":"Yaml file"},{"location":"tutorials/elastica-profile/#structure","text":"An Elastica profile definition looks like this: article : label : Article description : type : elastica server : xtc_elastica request : contenu-by-id service : Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\GetElasticaXtcRequest Default values can be provided thanks to args : article : label : Article description : type : elastica server : xtc_elastica request : contenu-by-id service : Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\GetElasticaXtcRequest args : category : News label (string) and description (string) are mandatory for any Drupal 8 plugin definition.","title":"Structure"},{"location":"tutorials/elastica-profile/#handler-type-type-string","text":"Always use elastica .","title":"Handler type type (string)"},{"location":"tutorials/elastica-profile/#server-server-string","text":"Provide the name of the XTC server plugin to use.","title":"Server server (string)"},{"location":"tutorials/elastica-profile/#request-request-string","text":"Provide the name of the XTC request plugin to use.","title":"Request request (string)"},{"location":"tutorials/elastica-profile/#service-service-string","text":"Provide the name of the XtcRequest class to build the Elasticsearch Client.","title":"Service service (string)"},{"location":"tutorials/elastica-profile/#arguments-args-array","text":"Array of default values that can be pass to the request plugin.","title":"Arguments args (array)"},{"location":"tutorials/elastica-profile/#extending-available-xtcrequest-services-list","text":"Any new XtcRequest service should be based on \\Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\AbstractElasticaXtcRequest . Example from the GetElasticaXtcRequest type: namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest; use Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\GetElasticaClient; class GetElasticaXtcRequest extends AbstractElasticaXtcRequest { /** * @return \\Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\AbstractElasticaClient */ protected function getElasticaClient(){ return New GetElasticaClient($this- profile); } }","title":"Extending available XtcRequest services list"},{"location":"tutorials/file-profile/","text":"File profile Loading a File profile To load a content, simply provide the profile name to the getFile() static function from the helper class \\Drupal\\xtc\\XtendedContent\\API\\Config . $content = \\Drupal\\xtc\\XtendedContent\\API\\Config::getFile( test_text ); Plugin definition This is a Drupal 8 YAML plugin. Yaml file The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_profiles.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcProfile/XtcProfilePluginManager.php . Structure A File profile definition looks like this: test_text : label : Text file description : type : text abs_path : false module : xtcfile path : example/demo.txt label (string) and description (string) are mandatory for any Drupal 8 plugin definition. Handler type type (string) Available types provided by the XTC File are: Csv csv : use LoadCsv class (based on https://github.com/parsecsv/parsecsv-for-php ) to load Comma-Separated Values files. Html html : load HTML file. Json json : load Json file through Drupal Json serializer. Markdown md : use LaodMarkdown class (using erusev/parsedown , https://github.com/erusev/parsedown ) to load Markdown content. Text text : load plain Text file. Yaml yaml : load Yaml file through Drupal Yaml serializer. Dynamic handlers Two dynamic handlers are provided for Documentation: MkDocs mkdocs : provide a light API to display MkDocs ( https://www.mkdocs.org/ ) based documentation in the administration area. Readme readme : extends Markdown type to provide display modules Readme files in the administration area. getDocs() static function from \\Drupal\\xtc\\XtendedContent\\API\\Config provides an example for dynamics handlers: public static function getDocs($module){ $profile = [ type = mkdocs , abs_path = false, module = $module, path = help/mkdocs.yml , ]; $content = self::getFromProfile($profile); if(!empty($content) is_array($content)) { return $content; } return h2 Documentation needs to be created. /h2 p Documentation follows b a href= https://www.mkdocs.org/ target= _blank mkdocs /a /b standards. /p ; } Config::getFromProfile() needs to be used in that case. This function directly trigger a get() ; public static function getFromProfile($profile){ return self::getHandler($profile[ type ]) - setProfile($profile) - setOptions() - get(); ; } If for any reason, an action needs to be done before the get(), the Config::getHandlerFromProfile() can be prefered: public static function getHandlerFromProfile($profile){ return self::getHandler($profile[ type ]) - setProfile($profile) - setOptions(); ; } Absolute path abs_path (boolean) Whether the provided path is absolute or local. Module module (string) Module machinename where the file is expected to be found. Path path (string) Path from the module root directory. Extending types list Any new File type handler should be based on \\Drupal\\xtcfile\\Plugin\\XtcHandler\\FileBase . Example from the Text type: namespace Drupal\\xtcfile\\Plugin\\XtcHandler; /** * Plugin implementation of the xtc_handler. * * @XtcHandler( * id = text , * label = @Translation( Text File for XTC ), * description = @Translation( Text File for XTC description. ) * ) */ class Text extends FileBase { }","title":"Profile \u203a File"},{"location":"tutorials/file-profile/#file-profile","text":"","title":"File profile"},{"location":"tutorials/file-profile/#loading-a-file-profile","text":"To load a content, simply provide the profile name to the getFile() static function from the helper class \\Drupal\\xtc\\XtendedContent\\API\\Config . $content = \\Drupal\\xtc\\XtendedContent\\API\\Config::getFile( test_text );","title":"Loading a File profile"},{"location":"tutorials/file-profile/#plugin-definition","text":"This is a Drupal 8 YAML plugin.","title":"Plugin definition"},{"location":"tutorials/file-profile/#yaml-file","text":"The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_profiles.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcProfile/XtcProfilePluginManager.php .","title":"Yaml file"},{"location":"tutorials/file-profile/#structure","text":"A File profile definition looks like this: test_text : label : Text file description : type : text abs_path : false module : xtcfile path : example/demo.txt label (string) and description (string) are mandatory for any Drupal 8 plugin definition.","title":"Structure"},{"location":"tutorials/file-profile/#handler-type-type-string","text":"Available types provided by the XTC File are: Csv csv : use LoadCsv class (based on https://github.com/parsecsv/parsecsv-for-php ) to load Comma-Separated Values files. Html html : load HTML file. Json json : load Json file through Drupal Json serializer. Markdown md : use LaodMarkdown class (using erusev/parsedown , https://github.com/erusev/parsedown ) to load Markdown content. Text text : load plain Text file. Yaml yaml : load Yaml file through Drupal Yaml serializer.","title":"Handler type type (string)"},{"location":"tutorials/file-profile/#dynamic-handlers","text":"Two dynamic handlers are provided for Documentation: MkDocs mkdocs : provide a light API to display MkDocs ( https://www.mkdocs.org/ ) based documentation in the administration area. Readme readme : extends Markdown type to provide display modules Readme files in the administration area. getDocs() static function from \\Drupal\\xtc\\XtendedContent\\API\\Config provides an example for dynamics handlers: public static function getDocs($module){ $profile = [ type = mkdocs , abs_path = false, module = $module, path = help/mkdocs.yml , ]; $content = self::getFromProfile($profile); if(!empty($content) is_array($content)) { return $content; } return h2 Documentation needs to be created. /h2 p Documentation follows b a href= https://www.mkdocs.org/ target= _blank mkdocs /a /b standards. /p ; } Config::getFromProfile() needs to be used in that case. This function directly trigger a get() ; public static function getFromProfile($profile){ return self::getHandler($profile[ type ]) - setProfile($profile) - setOptions() - get(); ; } If for any reason, an action needs to be done before the get(), the Config::getHandlerFromProfile() can be prefered: public static function getHandlerFromProfile($profile){ return self::getHandler($profile[ type ]) - setProfile($profile) - setOptions(); ; }","title":"Dynamic handlers"},{"location":"tutorials/file-profile/#absolute-path-abs_path-boolean","text":"Whether the provided path is absolute or local.","title":"Absolute path abs_path (boolean)"},{"location":"tutorials/file-profile/#module-module-string","text":"Module machinename where the file is expected to be found.","title":"Module module (string)"},{"location":"tutorials/file-profile/#path-path-string","text":"Path from the module root directory.","title":"Path path (string)"},{"location":"tutorials/file-profile/#extending-types-list","text":"Any new File type handler should be based on \\Drupal\\xtcfile\\Plugin\\XtcHandler\\FileBase . Example from the Text type: namespace Drupal\\xtcfile\\Plugin\\XtcHandler; /** * Plugin implementation of the xtc_handler. * * @XtcHandler( * id = text , * label = @Translation( Text File for XTC ), * description = @Translation( Text File for XTC description. ) * ) */ class Text extends FileBase { }","title":"Extending types list"},{"location":"tutorials/guzzle-profile/","text":"Guzzle profile Loading a Guzzle profile To load an Guzzle client as a service, simply provide the profile name, the helper static function Config::getXtcRequestFromProfile() from \\Drupal\\xtc\\XtendedContent\\API\\Config . $profileService = Config::getXtcRequestFromProfile( user_profile ); That does: public static function getXtcRequestFromProfile($name){ $profile = \\Drupal::service( plugin.manager.xtc_profile ) - getDefinition($name) ; $xtcrequest = (New $profile[ service ]($name)); if($xtcrequest instanceof AbstractXtcRequest){ $xtcrequest- setConfigfromPlugins(); } return $xtcrequest; } Config::getXtcRequestFromProfile() returns an instance of AbstractXtcRequest as it is a very high level helper function. When getting a Guzzle profile, we expect the built Client to be using Guzzle - see \\Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest\\AbstractGuzzleXtcRequest : protected function buildClient(){ $this- client = $this- getGuzzleClient(); $this- client- setXtcConfig($this- config); return $this; } Then expect get() to behave exactly as your usual Guzzle Client . $users = $profileService- get( getUserGroupById , $this- groupId)- getData( array ); As get() function from \\Drupal\\xtc\\XtendedContent\\Serve\\XtcRequest\\AbstractXtcRequest is as transparent as possible: public function get($method, $param = ) { try { $this- client- init($method, $param); $content = $this- client- get(); } catch (RequestException $e) { $content = ; } $this- setData($content); return $this; } Plugin definition This is a Drupal 8 YAML plugin. Yaml file The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_profiles.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcProfile/XtcProfilePluginManager.php . Structure A Guzzle profile definition looks like this: user_profile : label : User profile description : type : guzzle server : ldap service : Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest\\GuzzleXtcRequest method : getUserGroupById label (string) and description (string) are mandatory for any Drupal 8 plugin definition. Handler type type (string) Always use guzzle . Server server (string) Provide the name of the XTC server plugin to use. Service service (string) Provide the name of the XtcRequest class to build the Guzzle Client. Method method (string) Method can be pass to benefit from dynamic functions. Extending available XtcRequest services list Any new XtcRequest service should be based on \\Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest\\AbstractGuzzleXtcRequest . Example from the GuzzleXtcRequest class: namespace Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest; class GuzzleXtcRequest extends AbstractGuzzleXtcRequest { }","title":"Profile \u203a Guzzle"},{"location":"tutorials/guzzle-profile/#guzzle-profile","text":"","title":"Guzzle profile"},{"location":"tutorials/guzzle-profile/#loading-a-guzzle-profile","text":"To load an Guzzle client as a service, simply provide the profile name, the helper static function Config::getXtcRequestFromProfile() from \\Drupal\\xtc\\XtendedContent\\API\\Config . $profileService = Config::getXtcRequestFromProfile( user_profile ); That does: public static function getXtcRequestFromProfile($name){ $profile = \\Drupal::service( plugin.manager.xtc_profile ) - getDefinition($name) ; $xtcrequest = (New $profile[ service ]($name)); if($xtcrequest instanceof AbstractXtcRequest){ $xtcrequest- setConfigfromPlugins(); } return $xtcrequest; } Config::getXtcRequestFromProfile() returns an instance of AbstractXtcRequest as it is a very high level helper function. When getting a Guzzle profile, we expect the built Client to be using Guzzle - see \\Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest\\AbstractGuzzleXtcRequest : protected function buildClient(){ $this- client = $this- getGuzzleClient(); $this- client- setXtcConfig($this- config); return $this; } Then expect get() to behave exactly as your usual Guzzle Client . $users = $profileService- get( getUserGroupById , $this- groupId)- getData( array ); As get() function from \\Drupal\\xtc\\XtendedContent\\Serve\\XtcRequest\\AbstractXtcRequest is as transparent as possible: public function get($method, $param = ) { try { $this- client- init($method, $param); $content = $this- client- get(); } catch (RequestException $e) { $content = ; } $this- setData($content); return $this; }","title":"Loading a Guzzle profile"},{"location":"tutorials/guzzle-profile/#plugin-definition","text":"This is a Drupal 8 YAML plugin.","title":"Plugin definition"},{"location":"tutorials/guzzle-profile/#yaml-file","text":"The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_profiles.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcProfile/XtcProfilePluginManager.php .","title":"Yaml file"},{"location":"tutorials/guzzle-profile/#structure","text":"A Guzzle profile definition looks like this: user_profile : label : User profile description : type : guzzle server : ldap service : Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest\\GuzzleXtcRequest method : getUserGroupById label (string) and description (string) are mandatory for any Drupal 8 plugin definition.","title":"Structure"},{"location":"tutorials/guzzle-profile/#handler-type-type-string","text":"Always use guzzle .","title":"Handler type type (string)"},{"location":"tutorials/guzzle-profile/#server-server-string","text":"Provide the name of the XTC server plugin to use.","title":"Server server (string)"},{"location":"tutorials/guzzle-profile/#service-service-string","text":"Provide the name of the XtcRequest class to build the Guzzle Client.","title":"Service service (string)"},{"location":"tutorials/guzzle-profile/#method-method-string","text":"Method can be pass to benefit from dynamic functions.","title":"Method method (string)"},{"location":"tutorials/guzzle-profile/#extending-available-xtcrequest-services-list","text":"Any new XtcRequest service should be based on \\Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest\\AbstractGuzzleXtcRequest . Example from the GuzzleXtcRequest class: namespace Drupal\\xtcguzzle\\XtendedContent\\Serve\\XtcRequest; class GuzzleXtcRequest extends AbstractGuzzleXtcRequest { }","title":"Extending available XtcRequest services list"},{"location":"tutorials/request/","text":"Defining a Request Loading a Request profile To load a content, simply provide the profile name to the loadXtcRequest() static function from the helper class \\Drupal\\xtc\\XtendedContent\\API\\Config . $request = Config::loadXtcRequest($profile[ request ]); Plugin definition This is a Drupal 8 Annotation plugin. XtcRequest classes An XtcRequest can be defined by a class extending \\Drupal\\xtc\\XtendedContent\\Serve\\XtcRequest\\AbstractXtcRequest : XtcRequest is mainly use to override the Client that will be used. namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest; use Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\SearchElasticaClient; class SearchElasticaXtcRequest extends AbstractElasticaXtcRequest { protected function getElasticaClient(){ return New SearchElasticaClient($this- profile); } } XtcClient classes An XtcClient can be defined by a class extending \\Drupal\\xtc\\XtendedContent\\Serve\\Client\\AbstractClient : XtcClient is mainly use to define the Methods that will can used. namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\Client; class GetElasticaClient extends AbstractElasticaClient { public function getElasticaDataByID(){ $clientParams = $this- getParams(); $clientParams[ id ] = $this- param[ q ]; try { $this- content = $this- client- get($clientParams); return $this; } finally{ return $this; } } public function getKnownDoc(){ $clientParams = $this- getParams(); $queryParams = explode( / , $this- param[ q ]); $clientParams[ index ] = $queryParams[0]; $clientParams[ type ] = $queryParams[1]; $clientParams[ id ] = $queryParams[2]; $this- content = $this- client- get($clientParams); return $this; } } Methods Methods are defined in: guzzle type profiles Xtc Request for elastica type profiles","title":"Request"},{"location":"tutorials/request/#defining-a-request","text":"","title":"Defining a Request"},{"location":"tutorials/request/#loading-a-request-profile","text":"To load a content, simply provide the profile name to the loadXtcRequest() static function from the helper class \\Drupal\\xtc\\XtendedContent\\API\\Config . $request = Config::loadXtcRequest($profile[ request ]);","title":"Loading a Request profile"},{"location":"tutorials/request/#plugin-definition","text":"This is a Drupal 8 Annotation plugin.","title":"Plugin definition"},{"location":"tutorials/request/#xtcrequest-classes","text":"An XtcRequest can be defined by a class extending \\Drupal\\xtc\\XtendedContent\\Serve\\XtcRequest\\AbstractXtcRequest : XtcRequest is mainly use to override the Client that will be used. namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest; use Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\SearchElasticaClient; class SearchElasticaXtcRequest extends AbstractElasticaXtcRequest { protected function getElasticaClient(){ return New SearchElasticaClient($this- profile); } }","title":"XtcRequest classes"},{"location":"tutorials/request/#xtcclient-classes","text":"An XtcClient can be defined by a class extending \\Drupal\\xtc\\XtendedContent\\Serve\\Client\\AbstractClient : XtcClient is mainly use to define the Methods that will can used. namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\Client; class GetElasticaClient extends AbstractElasticaClient { public function getElasticaDataByID(){ $clientParams = $this- getParams(); $clientParams[ id ] = $this- param[ q ]; try { $this- content = $this- client- get($clientParams); return $this; } finally{ return $this; } } public function getKnownDoc(){ $clientParams = $this- getParams(); $queryParams = explode( / , $this- param[ q ]); $clientParams[ index ] = $queryParams[0]; $clientParams[ type ] = $queryParams[1]; $clientParams[ id ] = $queryParams[2]; $this- content = $this- client- get($clientParams); return $this; } }","title":"XtcClient classes"},{"location":"tutorials/request/#methods","text":"Methods are defined in: guzzle type profiles Xtc Request for elastica type profiles","title":"Methods"},{"location":"tutorials/search-block/","text":"Creating a search block Search block mainly consists of displaying an XTC Search form in a Drupal block instead of a page. Main differences with an XTC Search page A Drupal block is defined by a Block plugin: No route, no default controller. A Drupal block doesn't have its own URL. Start by providing a Block Create a Block that extends \\Drupal\\xtcsearch\\Plugin\\Block\\XtcSearchBlockBase . Define the Xtc Search plugin name in the getSearchName() function. namespace Drupal\\xtc_search\\Plugin\\Block; use Drupal\\xtcsearch\\Plugin\\Block\\XtcSearchBlockBase; /** * Provides a XtcSearchBlock block. * * @Block( * id = light_xtcsearch_block , * admin_label = @Translation( Light XTC Search block ), * ) */ class LightXtcSearchBlock extends XtcSearchBlockBase { protected function getSearchName() : string { return search_light ; } } Loading a Search form To load a Search form, simply provide the profile name, the helper static function Config::getSearch() from \\Drupal\\xtc\\XtendedContent\\API\\Config . $form = Config::getSearch( xtc_search ); Plugin example A Search Block profile definition looks like this: search_light : label : XTC Lite Search description : XTC Lite Search routeName : xtcsearch.search resetRoute : xtcsearch.search server : xtc_elastica display : xtc_lightsearch_block index : - contenu - document - publication type : _doc filters : nosuggest : header pager : name : nopager masonry : false This search_light XTC Search Block provides a small minimum block to be displayed anywhere on the website: on submit, it redirect to xtcsearch.search : the XTC Search form page. That other one provide a block that displays 3 coming events: agenda_block : label : Next events description : Agenda : Next events. form : Drupal\\xtc_agenda\\Form\\AgendaForm routeName : xtc_agenda.agenda resetRoute : xtc_agenda.agenda server : xtc_elastica display : xtc_agenda_block items : theme : teaser_event_block region : content index : - event type : _doc filters : comingEvents : hidden pager : name : nopager size : 3 masonry : false nav : bottom_link : type : route label : See all route : xtc_agenda.agenda sort : field : startDate dir : asc We can note that: 3 items are displayed, with no pager. Sorted by date. A specific display is used. The comingEvents request is used, but no widget is displayed ( hidden ). A See all bottom link is provided to xtc_agenda.agenda route (main Agenda page). On submit, redirect to xtc_agenda.agenda route. Build your own To define a custom display for an XTC Search Block, we recommend you start from xtc_block in xtcsearch.xtcsearch_displays.yml . Because it is not reasonable to display Hide and Reset buttons in the sidebar region, you should use the Filter Top filter_top (boolean) and Filter Bottom filter_bottom (boolean) values to define if filters will be displayed in the top region or the bottom region.","title":"Search \u203a block"},{"location":"tutorials/search-block/#creating-a-search-block","text":"Search block mainly consists of displaying an XTC Search form in a Drupal block instead of a page.","title":"Creating a search block"},{"location":"tutorials/search-block/#main-differences-with-an-xtc-search-page","text":"A Drupal block is defined by a Block plugin: No route, no default controller. A Drupal block doesn't have its own URL.","title":"Main differences with an XTC Search page"},{"location":"tutorials/search-block/#start-by-providing-a-block","text":"Create a Block that extends \\Drupal\\xtcsearch\\Plugin\\Block\\XtcSearchBlockBase . Define the Xtc Search plugin name in the getSearchName() function. namespace Drupal\\xtc_search\\Plugin\\Block; use Drupal\\xtcsearch\\Plugin\\Block\\XtcSearchBlockBase; /** * Provides a XtcSearchBlock block. * * @Block( * id = light_xtcsearch_block , * admin_label = @Translation( Light XTC Search block ), * ) */ class LightXtcSearchBlock extends XtcSearchBlockBase { protected function getSearchName() : string { return search_light ; } }","title":"Start by providing a Block"},{"location":"tutorials/search-block/#loading-a-search-form","text":"To load a Search form, simply provide the profile name, the helper static function Config::getSearch() from \\Drupal\\xtc\\XtendedContent\\API\\Config . $form = Config::getSearch( xtc_search );","title":"Loading a Search form"},{"location":"tutorials/search-block/#plugin-example","text":"A Search Block profile definition looks like this: search_light : label : XTC Lite Search description : XTC Lite Search routeName : xtcsearch.search resetRoute : xtcsearch.search server : xtc_elastica display : xtc_lightsearch_block index : - contenu - document - publication type : _doc filters : nosuggest : header pager : name : nopager masonry : false This search_light XTC Search Block provides a small minimum block to be displayed anywhere on the website: on submit, it redirect to xtcsearch.search : the XTC Search form page. That other one provide a block that displays 3 coming events: agenda_block : label : Next events description : Agenda : Next events. form : Drupal\\xtc_agenda\\Form\\AgendaForm routeName : xtc_agenda.agenda resetRoute : xtc_agenda.agenda server : xtc_elastica display : xtc_agenda_block items : theme : teaser_event_block region : content index : - event type : _doc filters : comingEvents : hidden pager : name : nopager size : 3 masonry : false nav : bottom_link : type : route label : See all route : xtc_agenda.agenda sort : field : startDate dir : asc We can note that: 3 items are displayed, with no pager. Sorted by date. A specific display is used. The comingEvents request is used, but no widget is displayed ( hidden ). A See all bottom link is provided to xtc_agenda.agenda route (main Agenda page). On submit, redirect to xtc_agenda.agenda route.","title":"Plugin example"},{"location":"tutorials/search-block/#build-your-own","text":"To define a custom display for an XTC Search Block, we recommend you start from xtc_block in xtcsearch.xtcsearch_displays.yml . Because it is not reasonable to display Hide and Reset buttons in the sidebar region, you should use the Filter Top filter_top (boolean) and Filter Bottom filter_bottom (boolean) values to define if filters will be displayed in the top region or the bottom region.","title":"Build your own"},{"location":"tutorials/search-display/","text":"Search display Plugin definition This is a Drupal 8 YAML plugin. Yaml file The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_displays.yml . The plugin is defined in the Xtended Content Search ( xtcsearch ) module: xtcsearch/src/PluginManager/XtcSearch/XtcSearchDisplayPluginManager.php . Structure A Search profile definition looks like this: xtc_page : label : Page description : Page for XTC Search. total : true hide : true reset : true filter_top : true filter_bottom : true container : main : prefix : div class= row m-0 id= container-news-filter suffix : /div header : prefix : div id= mainfilter-div class= col-12 mainfilter-div pt-3 div class= row suffix : /div /div sidebar : prefix : div id= filter-div class= order-1 order-md-2 mb-4 mb-md-0 col-12 col-md-4 div class= row mr-md-0 h-100 div class= col-12 filter-div pt-3 suffix : /div /div /div top : content : prefix : div id= news-elements class= col-12 p-0 order-2 order-md-1 suffix : /div bottom : footer : button : buttons : prefix : div class= row col-12 mt-3 pr-md-0 suffix : /div filter_top : prefix : div class= col-6 div class= form-group text-left suffix : /div /div filter_bottom : prefix : div class= col-12 mt-3 div class= form-group text-right suffix : /div /div hide : prefix : div class= col-12 mt-3 mb-3 d-block d-md-none div class= text-center text-sm-right d-block suffix : /div /div reset : prefix : div class= col-6 text-right mt-1 pr-md-0 suffix : /div navigation : top : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 suffix : /div /div top_buttons : prefix : div class= float-right suffix : /div top_prev : prefix : suffix : top_next : prefix : suffix : bottom : prefix : div class= row mx-0 mb-50 div class= col-12 bottom-months px-0 px-md-15 suffix : /div /div bottom_buttons : prefix : suffix : bottom_prev : prefix : div class= float-left suffix : /div bottom_next : prefix : div class= float-right suffix : /div items : items : prefix : div id= news-list-div suffix : /div results : prefix : div id= all-items class= gallery-wrapper clearfix div class= col-sm-12 col-md-6 col-lg-4 grid-sizer px-0 px-md-3 /div suffix : /div noresults : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 no-result suffix : /div /div noresults_button : prefix : div class= reset div class= chevron /div suffix : /div label (string) and description (string) are mandatory for any Drupal 8 plugin definition. Total total (boolean) Define if the Total number of results should be displayed. Hide hide (boolean) Define if the Hide button should be displayed. Reset reset (boolean) Define if the Reset button should be displayed. Filter Top filter_top (boolean) Define if the filters should be displayed in the Top region. Filter Bottom filter_bottom (boolean) Define if the filters should be displayed in the Bottom region. Link link (array) Define a link that should usually lead to an XTC Search full page. Link Label label (string) Define the label of the link. Link page page (string) Define the route of the link. Container container (array) 7 Container regions are available: main header sidebar top content bottom footer For each container region, Prefix and Suffix tags can be defined. Button button (array) 5 Button zones are available: buttons filter_top filter_bottom hide reset For each button zone, Prefix and Suffix tags can be defined. Navigation navigation (array) 8 Navigation regions are available: top top_buttons top_prev top_next bottom bottom_buttons bottom_prev bottom_next For each navigation region, Prefix and Suffix tags can be defined. Items items (array) 4 Items zones are available: items results noresults: Used when no result is return. noresults_button: Button that allows the user to reset the form. For each items zone, Prefix and Suffix tags can be defined. About Prefix and Suffix Please note, prefix and suffix default to '' ; top_prev : prefix : suffix : and top_prev : are the same. Block display example Where the link value is defined. And most of header elements ( total , hide , reset ) are hidden. While filters are displayed in the button region instead of the sidebar . xtc_block : label : Block description : Block for XTC Search. total : false hide : false reset : false filter_top : false filter_bottom : true link : label : All events page : xtc_search container : main : prefix : div class= row m-0 order-1 id= container-news-filter suffix : /div header : prefix : div id= mainfilter-div class= col-12 mainfilter-div pt-3 order-2 div class= row suffix : /div /div top : prefix : div id= news-elements class= col-12 p-0 order-3 suffix : /div content : prefix : div id= news-elements class= col-12 p-0 order-4 suffix : /div bottom : prefix : div class= col-12 p-0 orderorder-5 suffix : /div sidebar : prefix : div id= filter-div class= mb-4 mb-md-0 col-12 order-6 div class= row py-2 m-0 div class= col-12 filter-div pt-3 suffix : /div /div /div footer : prefix : div class= col-12 p-0 order-7 suffix : /div button : buttons : prefix : div class= row col-12 mt-3 pr-md-0 suffix : /div filter_top : prefix : div class= col-6 div class= form-group text-left suffix : /div /div filter_bottom : prefix : div class= col-12 mt-3 div class= form-group text-right suffix : /div /div hide : prefix : div class= col-12 mt-3 mb-3 d-block d-md-none div class= text-center text-sm-right d-block suffix : /div /div reset : prefix : div class= col-6 text-right mt-1 pr-md-0 suffix : /div navigation : top : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 suffix : /div /div top_buttons : prefix : div class= float-right suffix : /div top_prev : top_next : bottom : prefix : div class= row mx-0 mb-50 div class= col-12 bottom-months px-0 px-md-15 suffix : /div /div bottom_buttons : bottom_prev : prefix : div class= float-left suffix : /div bottom_next : prefix : div class= float-right suffix : /div items : items : prefix : div id= news-list-div suffix : /div results : prefix : div id= all-items class= gallery-wrapper clearfix div class= col-sm-12 col-md-6 col-lg-4 grid-sizer px-0 px-md-3 /div suffix : /div noresults : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 no-result suffix : /div /div noresults_button : prefix : div class= reset div class= chevron /div suffix : /div Autocomplete display example An autocomplete search form needs no element with prefix and suffix. autocomplete : label : Autocomplete description : Autocomplete for XTC Search. container : main : header : top : content : bottom : sidebar : footer : button : buttons : filter_top : filter_bottom : hide : reset : items : items : results : noresults : noresults_button :","title":"Search \u203a display"},{"location":"tutorials/search-display/#search-display","text":"","title":"Search display"},{"location":"tutorials/search-display/#plugin-definition","text":"This is a Drupal 8 YAML plugin.","title":"Plugin definition"},{"location":"tutorials/search-display/#yaml-file","text":"The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_displays.yml . The plugin is defined in the Xtended Content Search ( xtcsearch ) module: xtcsearch/src/PluginManager/XtcSearch/XtcSearchDisplayPluginManager.php .","title":"Yaml file"},{"location":"tutorials/search-display/#structure","text":"A Search profile definition looks like this: xtc_page : label : Page description : Page for XTC Search. total : true hide : true reset : true filter_top : true filter_bottom : true container : main : prefix : div class= row m-0 id= container-news-filter suffix : /div header : prefix : div id= mainfilter-div class= col-12 mainfilter-div pt-3 div class= row suffix : /div /div sidebar : prefix : div id= filter-div class= order-1 order-md-2 mb-4 mb-md-0 col-12 col-md-4 div class= row mr-md-0 h-100 div class= col-12 filter-div pt-3 suffix : /div /div /div top : content : prefix : div id= news-elements class= col-12 p-0 order-2 order-md-1 suffix : /div bottom : footer : button : buttons : prefix : div class= row col-12 mt-3 pr-md-0 suffix : /div filter_top : prefix : div class= col-6 div class= form-group text-left suffix : /div /div filter_bottom : prefix : div class= col-12 mt-3 div class= form-group text-right suffix : /div /div hide : prefix : div class= col-12 mt-3 mb-3 d-block d-md-none div class= text-center text-sm-right d-block suffix : /div /div reset : prefix : div class= col-6 text-right mt-1 pr-md-0 suffix : /div navigation : top : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 suffix : /div /div top_buttons : prefix : div class= float-right suffix : /div top_prev : prefix : suffix : top_next : prefix : suffix : bottom : prefix : div class= row mx-0 mb-50 div class= col-12 bottom-months px-0 px-md-15 suffix : /div /div bottom_buttons : prefix : suffix : bottom_prev : prefix : div class= float-left suffix : /div bottom_next : prefix : div class= float-right suffix : /div items : items : prefix : div id= news-list-div suffix : /div results : prefix : div id= all-items class= gallery-wrapper clearfix div class= col-sm-12 col-md-6 col-lg-4 grid-sizer px-0 px-md-3 /div suffix : /div noresults : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 no-result suffix : /div /div noresults_button : prefix : div class= reset div class= chevron /div suffix : /div label (string) and description (string) are mandatory for any Drupal 8 plugin definition.","title":"Structure"},{"location":"tutorials/search-display/#total-total-boolean","text":"Define if the Total number of results should be displayed.","title":"Total total (boolean)"},{"location":"tutorials/search-display/#hide-hide-boolean","text":"Define if the Hide button should be displayed.","title":"Hide hide (boolean)"},{"location":"tutorials/search-display/#reset-reset-boolean","text":"Define if the Reset button should be displayed.","title":"Reset reset (boolean)"},{"location":"tutorials/search-display/#filter-top-filter_top-boolean","text":"Define if the filters should be displayed in the Top region.","title":"Filter Top filter_top (boolean)"},{"location":"tutorials/search-display/#filter-bottom-filter_bottom-boolean","text":"Define if the filters should be displayed in the Bottom region.","title":"Filter Bottom filter_bottom (boolean)"},{"location":"tutorials/search-display/#link-link-array","text":"Define a link that should usually lead to an XTC Search full page.","title":"Link link (array)"},{"location":"tutorials/search-display/#link-label-label-string","text":"Define the label of the link.","title":"Link Label label (string)"},{"location":"tutorials/search-display/#link-page-page-string","text":"Define the route of the link.","title":"Link page page (string)"},{"location":"tutorials/search-display/#container-container-array","text":"7 Container regions are available: main header sidebar top content bottom footer For each container region, Prefix and Suffix tags can be defined.","title":"Container container (array)"},{"location":"tutorials/search-display/#button-button-array","text":"5 Button zones are available: buttons filter_top filter_bottom hide reset For each button zone, Prefix and Suffix tags can be defined.","title":"Button button (array)"},{"location":"tutorials/search-display/#navigation-navigation-array","text":"8 Navigation regions are available: top top_buttons top_prev top_next bottom bottom_buttons bottom_prev bottom_next For each navigation region, Prefix and Suffix tags can be defined.","title":"Navigation navigation (array)"},{"location":"tutorials/search-display/#items-items-array","text":"4 Items zones are available: items results noresults: Used when no result is return. noresults_button: Button that allows the user to reset the form. For each items zone, Prefix and Suffix tags can be defined.","title":"Items items (array)"},{"location":"tutorials/search-display/#about-prefix-and-suffix","text":"Please note, prefix and suffix default to '' ; top_prev : prefix : suffix : and top_prev : are the same.","title":"About Prefix and Suffix"},{"location":"tutorials/search-display/#block-display-example","text":"Where the link value is defined. And most of header elements ( total , hide , reset ) are hidden. While filters are displayed in the button region instead of the sidebar . xtc_block : label : Block description : Block for XTC Search. total : false hide : false reset : false filter_top : false filter_bottom : true link : label : All events page : xtc_search container : main : prefix : div class= row m-0 order-1 id= container-news-filter suffix : /div header : prefix : div id= mainfilter-div class= col-12 mainfilter-div pt-3 order-2 div class= row suffix : /div /div top : prefix : div id= news-elements class= col-12 p-0 order-3 suffix : /div content : prefix : div id= news-elements class= col-12 p-0 order-4 suffix : /div bottom : prefix : div class= col-12 p-0 orderorder-5 suffix : /div sidebar : prefix : div id= filter-div class= mb-4 mb-md-0 col-12 order-6 div class= row py-2 m-0 div class= col-12 filter-div pt-3 suffix : /div /div /div footer : prefix : div class= col-12 p-0 order-7 suffix : /div button : buttons : prefix : div class= row col-12 mt-3 pr-md-0 suffix : /div filter_top : prefix : div class= col-6 div class= form-group text-left suffix : /div /div filter_bottom : prefix : div class= col-12 mt-3 div class= form-group text-right suffix : /div /div hide : prefix : div class= col-12 mt-3 mb-3 d-block d-md-none div class= text-center text-sm-right d-block suffix : /div /div reset : prefix : div class= col-6 text-right mt-1 pr-md-0 suffix : /div navigation : top : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 suffix : /div /div top_buttons : prefix : div class= float-right suffix : /div top_prev : top_next : bottom : prefix : div class= row mx-0 mb-50 div class= col-12 bottom-months px-0 px-md-15 suffix : /div /div bottom_buttons : bottom_prev : prefix : div class= float-left suffix : /div bottom_next : prefix : div class= float-right suffix : /div items : items : prefix : div id= news-list-div suffix : /div results : prefix : div id= all-items class= gallery-wrapper clearfix div class= col-sm-12 col-md-6 col-lg-4 grid-sizer px-0 px-md-3 /div suffix : /div noresults : prefix : div class= row mx-0 mb-30 div class= col-12 px-0 px-md-15 no-result suffix : /div /div noresults_button : prefix : div class= reset div class= chevron /div suffix : /div","title":"Block display example"},{"location":"tutorials/search-display/#autocomplete-display-example","text":"An autocomplete search form needs no element with prefix and suffix. autocomplete : label : Autocomplete description : Autocomplete for XTC Search. container : main : header : top : content : bottom : sidebar : footer : button : buttons : filter_top : filter_bottom : hide : reset : items : items : results : noresults : noresults_button :","title":"Autocomplete display example"},{"location":"tutorials/search-page/","text":"Creating a search page Presently, only Elastica search is available. Start by providing a route Define a route as usual in a *.routing.yaml file: xtcsearch.search : path : /xtcsearch/search defaults : _controller : \\Drupal\\xtcsearch\\Controller\\XtcSearchController::search _title : XTC Search requirements : _permission : access content This route will trigger a standard controller. Controller The controller can be defined from scratch: namespace Drupal\\xtcsearch\\Controller; use Drupal\\Core\\Controller\\ControllerBase; use Drupal\\xtc\\XtendedContent\\API\\Config; use Symfony\\Component\\HttpFoundation\\JsonResponse; class XtcSearchController extends ControllerBase { /** * @var array */ protected $form; /** * @return array */ public function search() { $this- form = Config::getSearch( xtc_search ); return [ #theme = xtc_search_form , #response = [ headline = $this- getTitle(), ], #form = $this- form, ]; } public function getTitle() { $route = \\Drupal::routeMatch(); return $route- getRouteObject()- getDefaults()[ _title ]; } } Or by extending \\Drupal\\xtcsearch\\Controller\\XtcSearchController : namespace Drupal\\xtc_search\\Controller; class SearchController extends XtcSearchController { } Usually, you will want to override the search() function. Loading a Search form To load a Search form, simply provide the profile name, the helper static function Config::getSearch() from \\Drupal\\xtc\\XtendedContent\\API\\Config . $form = Config::getSearch( xtc_search ); Plugin example A Search profile definition looks like this: xtc_search : label : XTC Search description : XTC Search server : xtc_elastica routeName : xtcsearch.search resetRoute : xtcsearch.search display : xtc_search_page items : theme : xtc_search_result_element region : content index : - contenu - document - publication type : _doc filters : excludeUnsearchable : hidden fulltext : header published : sidebar learningResource : sidebar editor : sidebar pager : name : page size : 20 masonry : false Another example, for Agenda in a fictional xtc_agenda module: agenda : label : Agenda description : Agenda search per month. form : Drupal\\xtc_agenda\\Form\\AgendaForm routeName : xtc_agenda.agenda_month resetRoute : xtc_agenda.agenda server : xtc_elastica display : xtc_search_page items : theme : teaser_event region : content index : - event type : _doc filters : excludeUnsearchable : hidden thisMonth : sidebar editor : sidebar pager : name : more size : 50 masonry : true nav : top_navigation : true bottom_navigation : true sort : field : startDate dir : desc Extending available XtcSearch form Any new XtcRequest service should be based on \\Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\AbstractElasticaXtcRequest . Example from the GetElasticaXtcRequest type: namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest; use Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\GetElasticaClient; class GetElasticaXtcRequest extends AbstractElasticaXtcRequest { /** * @return \\Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\AbstractElasticaClient */ protected function getElasticaClient(){ return New GetElasticaClient($this- profile); } }","title":"Search \u203a page"},{"location":"tutorials/search-page/#creating-a-search-page","text":"Presently, only Elastica search is available.","title":"Creating a search page"},{"location":"tutorials/search-page/#start-by-providing-a-route","text":"Define a route as usual in a *.routing.yaml file: xtcsearch.search : path : /xtcsearch/search defaults : _controller : \\Drupal\\xtcsearch\\Controller\\XtcSearchController::search _title : XTC Search requirements : _permission : access content This route will trigger a standard controller.","title":"Start by providing a route"},{"location":"tutorials/search-page/#controller","text":"The controller can be defined from scratch: namespace Drupal\\xtcsearch\\Controller; use Drupal\\Core\\Controller\\ControllerBase; use Drupal\\xtc\\XtendedContent\\API\\Config; use Symfony\\Component\\HttpFoundation\\JsonResponse; class XtcSearchController extends ControllerBase { /** * @var array */ protected $form; /** * @return array */ public function search() { $this- form = Config::getSearch( xtc_search ); return [ #theme = xtc_search_form , #response = [ headline = $this- getTitle(), ], #form = $this- form, ]; } public function getTitle() { $route = \\Drupal::routeMatch(); return $route- getRouteObject()- getDefaults()[ _title ]; } } Or by extending \\Drupal\\xtcsearch\\Controller\\XtcSearchController : namespace Drupal\\xtc_search\\Controller; class SearchController extends XtcSearchController { } Usually, you will want to override the search() function.","title":"Controller"},{"location":"tutorials/search-page/#loading-a-search-form","text":"To load a Search form, simply provide the profile name, the helper static function Config::getSearch() from \\Drupal\\xtc\\XtendedContent\\API\\Config . $form = Config::getSearch( xtc_search );","title":"Loading a Search form"},{"location":"tutorials/search-page/#plugin-example","text":"A Search profile definition looks like this: xtc_search : label : XTC Search description : XTC Search server : xtc_elastica routeName : xtcsearch.search resetRoute : xtcsearch.search display : xtc_search_page items : theme : xtc_search_result_element region : content index : - contenu - document - publication type : _doc filters : excludeUnsearchable : hidden fulltext : header published : sidebar learningResource : sidebar editor : sidebar pager : name : page size : 20 masonry : false Another example, for Agenda in a fictional xtc_agenda module: agenda : label : Agenda description : Agenda search per month. form : Drupal\\xtc_agenda\\Form\\AgendaForm routeName : xtc_agenda.agenda_month resetRoute : xtc_agenda.agenda server : xtc_elastica display : xtc_search_page items : theme : teaser_event region : content index : - event type : _doc filters : excludeUnsearchable : hidden thisMonth : sidebar editor : sidebar pager : name : more size : 50 masonry : true nav : top_navigation : true bottom_navigation : true sort : field : startDate dir : desc","title":"Plugin example"},{"location":"tutorials/search-page/#extending-available-xtcsearch-form","text":"Any new XtcRequest service should be based on \\Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest\\AbstractElasticaXtcRequest . Example from the GetElasticaXtcRequest type: namespace Drupal\\xtcelastica\\XtendedContent\\Serve\\XtcRequest; use Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\GetElasticaClient; class GetElasticaXtcRequest extends AbstractElasticaXtcRequest { /** * @return \\Drupal\\xtcelastica\\XtendedContent\\Serve\\Client\\AbstractElasticaClient */ protected function getElasticaClient(){ return New GetElasticaClient($this- profile); } }","title":"Extending available XtcSearch form"},{"location":"tutorials/search-profile/","text":"Search profile Plugin definition This is a Drupal 8 YAML plugin. Yaml file The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_searchs.yml . The plugin is defined in the Xtended Content Search ( xtcsearch ) module: xtcsearch/src/PluginManager/XtcSearch/XtcSearchPluginManager.php . Structure A Search profile definition looks like this: xtc_search : label : XTC Search description : XTC Search server : xtc_elastica routeName : xtcsearch.search resetRoute : xtcsearch.search display : xtc_search_page items : theme : xtc_search_result_element region : content index : - contenu - document - publication type : _doc filters : excludeUnsearchable : hidden fulltext : header published : sidebar learningResource : sidebar editor : sidebar pager : name : page size : 20 masonry : false Another example, for Agenda in a fictional xtc_agenda module: agenda : label : Agenda description : Agenda search per month. form : Drupal\\xtc_agenda\\Form\\AgendaForm routeName : xtc_agenda.agenda_month resetRoute : xtc_agenda.agenda server : xtc_elastica display : xtc_search_page items : theme : teaser_event region : content index : - event type : _doc filters : excludeUnsearchable : hidden thisMonth : sidebar editor : sidebar pager : name : more size : 50 masonry : true nav : top_navigation : true bottom_navigation : true sort : field : startDate dir : desc label (string) and description (string) are mandatory for any Drupal 8 plugin definition. Form form (string) By default, \\Drupal\\xtcsearch\\Form\\XtcSearchForm is used. namespace Drupal\\xtcsearch\\Form; class XtcSearchForm extends XtcSearchFormBase { } This value allows to override this class. To define such a custom: extends \\Drupal\\xtcsearch\\Form\\XtcSearchForm or \\Drupal\\xtcsearch\\Form\\XtcSearchFormBase namespace Drupal\\xtc_agenda\\Form; use Drupal\\xtcsearch\\Form\\XtcSearchForm; class AgendaForm extends XtcSearchForm { } This could be useful, for example, to override: preprocessResults() getNav() emptyResultMessage() preprocessQueryString() Server server (string) Provide the name of the XTC server plugin to use. Presently, only Elastica search is available: make sure this is an elastica type server. Route name routeName (string) The route is used on submit. Optional: if not defined, the current route will be used. Pretty useful to define a Search page with dynamic route. For a better project documentation, always define a routeName when not using a dynamic route. Reset route resetName (string) The route is used by the reset button. It allows to provide a resetRoute that is different from the routeName. Optional: if not defined, the current route will be used. Pretty useful to define a Search page with dynamic route. For a better project documentation, always define a routeName when not using a dynamic route. Display display (string) Provide the name of the XTC display plugin to use. Items items (array) Define how to display each item from the results. Theme hook theme (string) Define the name of the Drupal theme hook to use to render each item. Depending on the definition of the hook_theme() , this can be a function or a template: Drupal as usual. Region region (string) Define the region where the results should appear. Available regions are: main header top content bottom sidebar footer Usually, content is the right value. Index index (array) Provide a list of Elastica indices to use in the search request. Type type (string) Provide the Elastica type to use in the search request. Presently, several indices can be requested but only 1 type. Filters filters (array) Array XTC filters plugin that should be used. For each filter, define the region where the Filter widget should appear. Available regions are: main header top content bottom sidebar footer A special region hidden allows to enable a filter in the search, without displaying it in the UI. We recommend to display filters in the header or in the sidebar . Pager pager (array) Define a pager that will used on the search display. Name name (string) Presently, 3 pagers are available: page: Standards pager that looks like Drupal long pager. Button trigger a reload of all the contents that will be displayed on the page. more: More button that loads only additional contents that are appended to the ones already displayed. Using Masonry, the More pager doesn't reload the whole page. nopager: No paging is proposed. Size size (string) Presently, 3 pagers are available: Masonry masonry (boolean) Should Masonry be used to display contents Navigation nav (array) Navigation regions Define if Top navigation top_navigation (boolean) and Bottom navigation bottom_navigation (boolean) should be used. Link regions Define if Top link top_link (array) and Bottom link bottom_link (array) should be used. To display a link, 3 values can be defined for Type type (string): route : use Url::fromRoute() url : use Url::fromUri() path : use Url::fromUri() see buildLinks() from \\Drupal\\xtcsearch\\Form\\Traits\\NavigationTrait for details. As a consequence, depending on the type of \\Drupal\\Core\\Url function you decide to use, make sure to define the expected values: label route url path parameters options Sort sort (array) Define Elastica Sort feature. Field field (string) Define the name of the existing Elastica field to be use for the sort. Direction dir (string) Define the value of the existing Elastica direction to be use for the sort. Allowed values are the ones provided by Elastica API: asc: Ascending desc: Descending","title":"Search \u203a profile"},{"location":"tutorials/search-profile/#search-profile","text":"","title":"Search profile"},{"location":"tutorials/search-profile/#plugin-definition","text":"This is a Drupal 8 YAML plugin.","title":"Plugin definition"},{"location":"tutorials/search-profile/#yaml-file","text":"The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_searchs.yml . The plugin is defined in the Xtended Content Search ( xtcsearch ) module: xtcsearch/src/PluginManager/XtcSearch/XtcSearchPluginManager.php .","title":"Yaml file"},{"location":"tutorials/search-profile/#structure","text":"A Search profile definition looks like this: xtc_search : label : XTC Search description : XTC Search server : xtc_elastica routeName : xtcsearch.search resetRoute : xtcsearch.search display : xtc_search_page items : theme : xtc_search_result_element region : content index : - contenu - document - publication type : _doc filters : excludeUnsearchable : hidden fulltext : header published : sidebar learningResource : sidebar editor : sidebar pager : name : page size : 20 masonry : false Another example, for Agenda in a fictional xtc_agenda module: agenda : label : Agenda description : Agenda search per month. form : Drupal\\xtc_agenda\\Form\\AgendaForm routeName : xtc_agenda.agenda_month resetRoute : xtc_agenda.agenda server : xtc_elastica display : xtc_search_page items : theme : teaser_event region : content index : - event type : _doc filters : excludeUnsearchable : hidden thisMonth : sidebar editor : sidebar pager : name : more size : 50 masonry : true nav : top_navigation : true bottom_navigation : true sort : field : startDate dir : desc label (string) and description (string) are mandatory for any Drupal 8 plugin definition.","title":"Structure"},{"location":"tutorials/search-profile/#form-form-string","text":"By default, \\Drupal\\xtcsearch\\Form\\XtcSearchForm is used. namespace Drupal\\xtcsearch\\Form; class XtcSearchForm extends XtcSearchFormBase { } This value allows to override this class. To define such a custom: extends \\Drupal\\xtcsearch\\Form\\XtcSearchForm or \\Drupal\\xtcsearch\\Form\\XtcSearchFormBase namespace Drupal\\xtc_agenda\\Form; use Drupal\\xtcsearch\\Form\\XtcSearchForm; class AgendaForm extends XtcSearchForm { } This could be useful, for example, to override: preprocessResults() getNav() emptyResultMessage() preprocessQueryString()","title":"Form form (string)"},{"location":"tutorials/search-profile/#server-server-string","text":"Provide the name of the XTC server plugin to use. Presently, only Elastica search is available: make sure this is an elastica type server.","title":"Server server (string)"},{"location":"tutorials/search-profile/#route-name-routename-string","text":"The route is used on submit. Optional: if not defined, the current route will be used. Pretty useful to define a Search page with dynamic route. For a better project documentation, always define a routeName when not using a dynamic route.","title":"Route name routeName (string)"},{"location":"tutorials/search-profile/#reset-route-resetname-string","text":"The route is used by the reset button. It allows to provide a resetRoute that is different from the routeName. Optional: if not defined, the current route will be used. Pretty useful to define a Search page with dynamic route. For a better project documentation, always define a routeName when not using a dynamic route.","title":"Reset route resetName (string)"},{"location":"tutorials/search-profile/#display-display-string","text":"Provide the name of the XTC display plugin to use.","title":"Display display (string)"},{"location":"tutorials/search-profile/#items-items-array","text":"Define how to display each item from the results.","title":"Items items (array)"},{"location":"tutorials/search-profile/#theme-hook-theme-string","text":"Define the name of the Drupal theme hook to use to render each item. Depending on the definition of the hook_theme() , this can be a function or a template: Drupal as usual.","title":"Theme hook theme (string)"},{"location":"tutorials/search-profile/#region-region-string","text":"Define the region where the results should appear. Available regions are: main header top content bottom sidebar footer Usually, content is the right value.","title":"Region region (string)"},{"location":"tutorials/search-profile/#index-index-array","text":"Provide a list of Elastica indices to use in the search request.","title":"Index index (array)"},{"location":"tutorials/search-profile/#type-type-string","text":"Provide the Elastica type to use in the search request. Presently, several indices can be requested but only 1 type.","title":"Type type (string)"},{"location":"tutorials/search-profile/#filters-filters-array","text":"Array XTC filters plugin that should be used. For each filter, define the region where the Filter widget should appear. Available regions are: main header top content bottom sidebar footer A special region hidden allows to enable a filter in the search, without displaying it in the UI. We recommend to display filters in the header or in the sidebar .","title":"Filters filters (array)"},{"location":"tutorials/search-profile/#pager-pager-array","text":"Define a pager that will used on the search display.","title":"Pager pager (array)"},{"location":"tutorials/search-profile/#name-name-string","text":"Presently, 3 pagers are available: page: Standards pager that looks like Drupal long pager. Button trigger a reload of all the contents that will be displayed on the page. more: More button that loads only additional contents that are appended to the ones already displayed. Using Masonry, the More pager doesn't reload the whole page. nopager: No paging is proposed.","title":"Name name (string)"},{"location":"tutorials/search-profile/#size-size-string","text":"Presently, 3 pagers are available:","title":"Size size (string)"},{"location":"tutorials/search-profile/#masonry-masonry-boolean","text":"Should Masonry be used to display contents","title":"Masonry masonry (boolean)"},{"location":"tutorials/search-profile/#navigation-nav-array","text":"","title":"Navigation nav (array)"},{"location":"tutorials/search-profile/#navigation-regions","text":"Define if Top navigation top_navigation (boolean) and Bottom navigation bottom_navigation (boolean) should be used.","title":"Navigation regions"},{"location":"tutorials/search-profile/#link-regions","text":"Define if Top link top_link (array) and Bottom link bottom_link (array) should be used. To display a link, 3 values can be defined for Type type (string): route : use Url::fromRoute() url : use Url::fromUri() path : use Url::fromUri() see buildLinks() from \\Drupal\\xtcsearch\\Form\\Traits\\NavigationTrait for details. As a consequence, depending on the type of \\Drupal\\Core\\Url function you decide to use, make sure to define the expected values: label route url path parameters options","title":"Link regions"},{"location":"tutorials/search-profile/#sort-sort-array","text":"Define Elastica Sort feature.","title":"Sort sort (array)"},{"location":"tutorials/search-profile/#field-field-string","text":"Define the name of the existing Elastica field to be use for the sort.","title":"Field field (string)"},{"location":"tutorials/search-profile/#direction-dir-string","text":"Define the value of the existing Elastica direction to be use for the sort. Allowed values are the ones provided by Elastica API: asc: Ascending desc: Descending","title":"Direction dir (string)"},{"location":"tutorials/server/","text":"Defining a Server Loading a Server profile To load a content, simply provide the profile name to the get() static function from the helper class \\Drupal\\xtc\\XtendedContent\\API\\XtcServer . $content = \\Drupal\\xtc\\XtendedContent\\API\\XtcServer::get( test_text ); Plugin definition This is a Drupal 8 YAML plugin. Yaml file The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_servers.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcServer/XtcServerPluginManager.php . Structure A Server profile definition looks like this: xtc_elastica : label : XTC Elastica description : Elastica Server, for multiple environments. type : elastica env : prod connection : dev : host : 127.0.0.123 port : 9200 rec : host : 192.168.1.123 port : 9200 prod : host : 192.168.1.456 port : 9200 label (string) and description (string) are mandatory for any Drupal 8 plugin definition. Server type type (string) Available types provided by the XTC File are: Elastica elastica : used by XTC Elastica handler Guzzle guzzle : used by XTC Guzzle handler Server active environment env (string) Defines the active environment to be used by the Drupal instance. Environments are used to facilitate deployment between different environments. Active environment can be overriden in the settings.local.php file: $settings[ xtc.serve_client ][ xtc ][ serve_client ][ server ][ xtc_elastica ][ env ] = dev ; If 2 different environments need to be used on the same instance of Drupal, it means you should define 2 different server profiles. Additional values Depending on the Handler that need a Server definition, you might need to define additional values. For example, XTC Elastica expects a Connection connection (array) to be defined, while XTC Guzzle API needs a Path path (array) and accepts Options options (array). In this case, Options are, transparently, the ones from the Guzzle API. countries : label : Countries description : type : guzzle env : prod-int options : verify : false timeout : 5 path : prod-int : tls : false server : data.example.com port : 8001 endpoint : pays prod-ext : tls : true server : data.example.com port : 8011 endpoint : pays rec-int : tls : false server : data-rec.example.com port : 8001 endpoint : pays rec-ext : tls : true server : data-rec.example.com port : 8011 endpoint : pays Uses Server profiles are used by: XTC Elastica XTC Guzzle XTC Search","title":"Server"},{"location":"tutorials/server/#defining-a-server","text":"","title":"Defining a Server"},{"location":"tutorials/server/#loading-a-server-profile","text":"To load a content, simply provide the profile name to the get() static function from the helper class \\Drupal\\xtc\\XtendedContent\\API\\XtcServer . $content = \\Drupal\\xtc\\XtendedContent\\API\\XtcServer::get( test_text );","title":"Loading a Server profile"},{"location":"tutorials/server/#plugin-definition","text":"This is a Drupal 8 YAML plugin.","title":"Plugin definition"},{"location":"tutorials/server/#yaml-file","text":"The profiles can be defined in a YAML file that follows this pattern: [module_name].xtc_servers.yml . The plugin is defined in the Xtended Content ( xtc ) module: xtc/src/PluginManager/XtcServer/XtcServerPluginManager.php .","title":"Yaml file"},{"location":"tutorials/server/#structure","text":"A Server profile definition looks like this: xtc_elastica : label : XTC Elastica description : Elastica Server, for multiple environments. type : elastica env : prod connection : dev : host : 127.0.0.123 port : 9200 rec : host : 192.168.1.123 port : 9200 prod : host : 192.168.1.456 port : 9200 label (string) and description (string) are mandatory for any Drupal 8 plugin definition.","title":"Structure"},{"location":"tutorials/server/#server-type-type-string","text":"Available types provided by the XTC File are: Elastica elastica : used by XTC Elastica handler Guzzle guzzle : used by XTC Guzzle handler","title":"Server type type (string)"},{"location":"tutorials/server/#server-active-environment-env-string","text":"Defines the active environment to be used by the Drupal instance. Environments are used to facilitate deployment between different environments. Active environment can be overriden in the settings.local.php file: $settings[ xtc.serve_client ][ xtc ][ serve_client ][ server ][ xtc_elastica ][ env ] = dev ; If 2 different environments need to be used on the same instance of Drupal, it means you should define 2 different server profiles.","title":"Server active environment env (string)"},{"location":"tutorials/server/#additional-values","text":"Depending on the Handler that need a Server definition, you might need to define additional values. For example, XTC Elastica expects a Connection connection (array) to be defined, while XTC Guzzle API needs a Path path (array) and accepts Options options (array). In this case, Options are, transparently, the ones from the Guzzle API. countries : label : Countries description : type : guzzle env : prod-int options : verify : false timeout : 5 path : prod-int : tls : false server : data.example.com port : 8001 endpoint : pays prod-ext : tls : true server : data.example.com port : 8011 endpoint : pays rec-int : tls : false server : data-rec.example.com port : 8001 endpoint : pays rec-ext : tls : true server : data-rec.example.com port : 8011 endpoint : pays","title":"Additional values"},{"location":"tutorials/server/#uses","text":"Server profiles are used by: XTC Elastica XTC Guzzle XTC Search","title":"Uses"}]}